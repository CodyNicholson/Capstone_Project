@model Capstone_Project.ViewModel.SurveyViewModel

@{
    ViewBag.Title = "TakeSurvey";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 name="@Model.Survey.Id">@Model.Survey.Name</h2>

<p>@Model.Survey.Directions</p>

<h4 style="margin-top: 1em">Most Favorite</h4>

<ul id="sortable">
    @{
        int index = 0;
        foreach (var option in Model.Options)
        {
            if (option.SurveyId == Model.Survey.Id)
            {
                <li class="list-group-item" name="surveyOption" id="@index">@option.Name</li>
                index++;
            }
        }
        if (index == 0)
        {
            <p id="@index" style="padding-top: 0.2%;">This survey does not have any options</p>
        }
    }
</ul>

<h4 style="margin-bottom: 1.5em;">Least Favorite</h4>

<!-- Pick up from here, trying to populate hidden fields with server data on client side -->
<div class="form-group">
    @Html.LabelFor(m => m.SurveyResults.OptionOrder)
    @Html.TextBoxFor(m => m.SurveyResults.OptionOrder, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.SurveyResults.OptionOrder)
</div>

<script type="text/javascript">
    $(function () {
        $("#sortable").sortable({ containment: 'parent', tolerance: 'pointer', cursor: 'pointer', revert: false, opacity: 0.60 });
        $("#sortable").disableSelection();
    });
</script>

<div class="row">
    <p><a id="submitBtn" data-user-id="@Model.User.Id" class="btn btn-primary js-post" onclick="getSortableOrderAndRedirect()" type="submit">Submit &raquo;</a></p>
</div>

<script type="text/javascript">
    function getSortableOrderAndRedirect() {
        var optionIds = [];
        $("ul li[name='surveyOption']").each(function() { optionIds.push($(this).attr("id")) });
        console.log(optionIds);
        localStorage.setItem("surveyOptionIds", optionIds);
        window.location.href = "/Results/ShowResults/" + @Model.Survey.Id;
        //$.post("/Results/SaveOptionOrder/", JSONstring);
        /*$.ajax({
            url: "/api/results/" + button.attr("data-results-id"),
            method: "POST",
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({ jewellerId: filter, locale: 'en-US' }),
            dataType: 'json',
            success: function() {console.log("Posted survey results");},
            error: function() {console.log("Error in posting survey results");}
        });*/
    }
</script>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
